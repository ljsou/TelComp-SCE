<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:p="http://primefaces.org/ui">
    <h:head>
        <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
        <title>TelCompSCE</title>
        <!-- YUI -->
        <link rel="stylesheet" type="text/css" href="lib/yui/reset-fonts-grids/reset-fonts-grids.css" />
        <link rel="stylesheet" type="text/css" href="lib/yui/assets/skins/sam/skin.css" />

        <!-- InputEx CSS -->
        <link type='text/css' rel='stylesheet' href='lib/inputex/css/inputEx.css' />

        <!-- YUI-accordion CSS -->
        <link rel="stylesheet" type="text/css" href="lib/accordionview/assets/skins/sam/accordionview.css" />

        <!-- WireIt CSS -->
        <link rel="stylesheet" type="text/css" href="css/WireIt.css" />
        <link rel="stylesheet" type="text/css" href="css/WireItEditor.css" />

        <style>
            div.WireIt-Container {
                width: 350px; /* Prevent the modules from scratching on the right */
            }

            div.WireIt-InOutContainer {	
                width: 150px;
            }

            div.WireIt-InputExTerminal {
                float: left;
                width: 21px;
                height: 21px;
                position: relative;
            }
            div.WireIt-InputExTerminal div.WireIt-Terminal {
                top: -3px;
                left: -7px;
            }
            div.inputEx-Group div.inputEx-label {
                width:100px;
            }

            div.WireIt-ImageContainer {
                width: auto;
            }

            div.Bubble div.body {
                width: 70px;
                height: 45px;
                opacity: 0.8;
                cursor: move;
            }

            .WiringEditor-module span {
                position: relative;
                top: -3px;
            }

        </style>

        <!-- YUI -->
        <script type="text/javascript" src="lib/yui/utilities/utilities.js"></script>
        <script type="text/javascript" src="lib/yui/resize/resize-min.js"></script>
        <script type="text/javascript" src="lib/yui/layout/layout-min.js"></script>
        <script type="text/javascript" src="lib/yui/container/container-min.js"></script>
        <script type="text/javascript" src="lib/yui/json/json-min.js"></script>
        <script type="text/javascript" src="lib/yui/button/button-min.js"></script>
        <script type="text/javascript" src="lib/yui/tabview/tabview-min.js"></script>

        <!-- InputEx with wirable options (WirableField-beta) -->
        <script src="lib/inputex/js/inputex.js"  type='text/javascript'></script>
        <script src="lib/inputex/js/Field.js"  type='text/javascript'></script>
        <script type="text/javascript" src="js/util/inputex/WirableField-beta.js"></script>
        <script src="lib/inputex/js/Group.js"  type='text/javascript'></script>
        <script src="lib/inputex/js/Visus.js"  type='text/javascript'></script>
        <script src="lib/inputex/js/fields/StringField.js"  type='text/javascript'></script>
        <script src="lib/inputex/js/fields/Textarea.js"  type='text/javascript'></script>
        <script src="lib/inputex/js/fields/SelectField.js"  type='text/javascript'></script>
        <script src="lib/inputex/js/fields/EmailField.js"  type='text/javascript'></script>
        <script src="lib/inputex/js/fields/UrlField.js"  type='text/javascript'></script>
        <script src="lib/inputex/js/fields/ListField.js"  type='text/javascript'></script>
        <script src="lib/inputex/js/fields/CheckBox.js"  type='text/javascript'></script>
        <script src="lib/inputex/js/fields/InPlaceEdit.js"  type='text/javascript'></script>

        <!-- YUI-Accordion -->
        <script src="lib/accordionview/accordionview-min.js"  type='text/javascript'></script>

        <!-- WireIt -->
        <!--[if IE]><script type="text/javascript" src="lib/excanvas.js"></script><![endif]-->
        <script type="text/javascript" src="js/WireIt.js"></script>
        <script type="text/javascript" src="js/CanvasElement.js"></script>
        <script type="text/javascript" src="js/Wire.js"></script>
        <script type="text/javascript" src="js/Terminal.js"></script>
        <script type="text/javascript" src="js/util/DD.js"></script>
        <script type="text/javascript" src="js/util/DDResize.js"></script>
        <script type="text/javascript" src="js/Container.js"></script>
        <script type="text/javascript" src="js/Layer.js"></script>
        <script type="text/javascript" src="js/util/inputex/FormContainer-beta.js"></script>
        <script type="text/javascript" src="js/LayerMap.js"></script>
        <script type="text/javascript" src="js/WiringEditor.js"></script>
        <script type="text/javascript" src="js/ImageContainer.js"></script>
        <script type="text/javascript" src="js/InOutContainer.js"></script>
        <script type="text/javascript" src="js/adapters/json-rpc.js"></script>

        <!-- Me permite incluier el lenguaje definido -->
        <script type="text/javascript" src="myDemo.js"></script>        
    

        <style>
            /* Comment Module */
            div.WireIt-Container.WiringEditor-module-comment { width: 200px; }
            div.WireIt-Container.WiringEditor-module-comment div.body { background-color: #EEEE66; }
            div.WireIt-Container.WiringEditor-module-comment div.body textarea { background-color: transparent; font-weight: bold; border: 0; }
        </style>


        <script>

            // InputEx needs a correct path to this image
            inputEx.spacerUrl = "/inputex/images/space.gif";
            var telcompLanguage;
            var editor;

            function initializeHome() {
                YAHOO.util.Event.onDOMReady(function() {

                    telcompLanguage = #{componentRetrievalManagedBean.jsVarKw}
                    editor = new WireIt.WiringEditor(telcompLanguage);
                    loadSearchPanel(controlStructures, 'control-structures');
                    //var editor2 = new WireIt.WiringEditor(contactFormFields); 	
                    // Open the infos panel

                    //editor.accordionView.openPanel(6);


                });
            }

            function loadSearchPanel(language, location) {
                console.log("Entra a loadSearchPanel" + language.toString());
                editor.modulesByName = {};
                editor.setAjaxOptions(language);
                editor.el = YAHOO.util.Dom.get(editor.options.parentEl);
                editor.helpPanel.render();
                editor.layout.render();
                editor.layer.eventChanged.subscribe(editor.onLayerChanged, editor, true);
                if (location === 'here') {
                    console.log("Entro a here...");
                    editor.leftEl = YAHOO.util.Dom.get(location);
                    editor.buildModulesList();
                    editor.renderSavedStatus();
                    editor.renderPropertiesForm();
                    editor.load();
                    editor.accordionView.openPanel(1);
                } else if (location === 'here2') {
                    console.log("Entro a here2...");
                    editor.leftEl2 = YAHOO.util.Dom.get(location);
                    editor.buildModulesList2();
                    editor.renderSavedStatus();
                    editor.renderPropertiesForm();
                    editor.load();
                    editor.accordionView.openPanel(2);
                } else if (location === 'control-structures') {
                    console.log("Entro a control-structures...");
                    editor.leftEl2 = YAHOO.util.Dom.get(location);
                    editor.buildModulesList2();
                    editor.renderSavedStatus();
                    editor.renderPropertiesForm();
                    editor.load();
                    editor.accordionView.openPanel(6);
                }
            }

            function coloringWire() {
                console.log("submited mapping!");
                var wireID = document.getElementById('clicked-wire').value;
                console.log(wireID);
                editor.layer.dataMapping(new String(wireID));
                //editor.layer.eventChanged.subscribe(editor.onLayerChanged, editor, true);

            }

            function getJsonGraph() {
                console.log("getJsonGraph");
                var j = document.getElementById('json-graph').value;
                console.log("Valor de j" + j);
                //console.log(JSON.stringify({fileDownloadController.jsonContent}));
                //{fileDownloadController.setJsonContentOnFile()};
            }

            function stopDowload() {
                statusDialog.hide();
            }

            function startDowload() {
                statusDialog.show();
                setTimeout('stopDowload()', 3500);
            }




        </script>
    </h:head>
    <h:body styleClass="yui-skin-sam" style="background: #f5f5f5;" onload="initializeHome();">
        <div id="top" >
            <div class="logo"><p><font size='6' color='#556B9F'>TelComp 2.0</font></p></div>
            <div id="toolbar"></div>
            <div class="topright">
                <span>Hello there !</span> | 
                <a href="../..">go to GIT</a>
            </div>
        </div>

        <div id="left">
            <ul border="1">                
                <li>                
                    <div style='position: relative;'>
                        <div id="layerMap"></div>
                    </div>
                </li>	
                <li>
                    <h2></h2>
                    <div>
                        <h2 style="width: 100px; margin: 15px 5px -3px 5px; font-weight: 600;">JSON Graph</h2>
                        <p id="jsonResoult" style="display: block; overflow: scroll; margin: 5px; font-size: 11px;padding: 5px; width: 232px; border: #999 dotted 1px;">
<!--                            <p>This GUI corresponds to the Service Creation Environment (SCE) from <b>TelComp 2.0 project</b></p>
                            <br />
                            <p><i>Drag and drop modules from the Component list</i> on the rigth to the working layer in the middle.</p>
                            <br />
                            <p><a href="demo.js" target="_new">Click here to view the language definition for this editor.</a></p>-->
                        </p>
                    </div>
                </li>	
            </ul>
        </div>

        <div id="right">
            <h:form prependId="false">
                <ul id="accordionView">
                    <li>
                        <h2>Search</h2>
                        <div style='position: relative;'>
                            <br />
                            <!--div id ="propertiesForm"--> 
                            <div>
                            
                                <h:outputScript name="jsf.js" library="javax.faces" target="head"/>
                                <h:outputLabel value="Enter your query..." style="color: #777; width: 200px; margin: 0px 5px 0px 8px;"/> 
                                <h:inputText id="key" value="#{componentRetrievalManagedBean.keyword}" style=" width: 180px; margin: 0px 5px 0px 8px;"/>
                                <p:commandButton id="keywordSearchBtn" style="font-size: smaller" icon="ui-icon-search" onclick="jsf.ajax.request(this, event, {execute: 'key', render: 'here'});
                return false;" ></p:commandButton>

                            </div>
                            <div><br /></div>
                        </div>
                    </li>
                    <li>
                        <h2>Search by keyword</h2>
                        <div>
                            <!--<input id="location" type="hidden" value="here" />-->
                            <h:panelGroup id="here" layout="block">
                                <script>
            telcompLanguage = #{componentRetrievalManagedBean.jsVarKw}
            loadSearchPanel(telcompLanguage, 'here');
                                </script>
                            </h:panelGroup>
                        </div>
                    </li>
                    <li>
                        <h2>Similar Components</h2>
                        <div>
                            <h:inputHidden id="simSearch" value="#{componentRetrievalManagedBean.selectedComponentId}" />
                            <h:commandButton id="simBtn" value="Search" onclick="jsf.ajax.request(this, event, {execute: 'simSearch', render: 'here2'});
                return false;" style="display: none;" ></h:commandButton>
                            <h:panelGroup id="here2" layout="block">
                                <script>
            telcompLanguage = #{componentRetrievalManagedBean.jsVarQy}
            loadSearchPanel(telcompLanguage, 'here2');
                                </script>
                            </h:panelGroup>
                        </div>
                    </li><li>
                        <h2>Co-occurring Components</h2>
                        <div style='position: relative;'>
                            <div>here are similar components have been<br /> used together in a composition...</div>
                        </div>
                    </li>
                    <li>
                        <h2>Direct Sequence</h2>
                        <div style='position: relative;'>
                            <div>Here are the components that<br /> have direct causal dependence...</div>
                        </div>
                    </li>
                    <li>
                        <h2>Inverse sequence</h2>
                        <div style='position: relative;'>
                            <div>Here are the components that<br /> have direct causal inverse</div>
                        </div>
                    </li>
                    <li>
                        <h2>Control Structures</h2>
                        <div>
                            <h:panelGroup id="control-structures" layout="block">

                            </h:panelGroup>
                        </div>
                    </li>

                </ul>

            </h:form> 
        </div>

        <div id="center">

        </div>

        <div id="helpPanel">
            <div class="hd">Welcome to the WiringEditor demonstration</div>
            <div class="bd" style="text-align: left;">

                <p>This example shows how to use the <i>ImageContainer</i> and <i>FormContainer</i> in a language definition.</p>
                <br />
                <p><b>Drag and drop modules from the Module list</b> on the left to the working layer in the middle.</p>
                <br />
                <p><a href="demo.js" target="_new">Click here to view the language definition for this editor.</a></p>
                <br />
                <p>Close this dialog to test the WiringEditor</p>
            </div>
        </div>

        <div>
            <h:form prependId="false">
                <p:commandButton id="modalDialogButton" value="Modal" type="button" onclick="jsf.ajax.request(this, event, {render: 'dataMappingTable'});
                return false;" style="display: none;"/>
                <h:inputHidden id="clicked-wire" value="null"/>
                <h:inputHidden id="queryIdInput" value="#{pruebasManagedBean.queryId}" />
                <h:inputHidden id="targetIdInput" value="#{pruebasManagedBean.targetId}" />
                <h:commandButton id="initQueryDataBtn" onclick="jsf.ajax.request(this, event, {execute: 'queryIdInput'});
                return false;" style="display: none;" />
                <h:commandButton id="initTargetDataBtn" onclick="jsf.ajax.request(this, event, {execute: 'targetIdInput'});
                return false;" style="display: none;" />
                <p:overlayPanel id="dataMapping" widgetVar="overlayPanelMapping" for="modalDialogButton" showEffect="drop" hideEffect="drop" dynamic="true" my="right top" at="right bottom" appendToBody="true" style="overflow-y: scroll">   
                    <p:dataTable id="dataMappingTable" value="#{formBean.initSourceDataElements()}" var="dataAssociation" 
                                 selectionMode="multiple" selection="#{formBean.selectedSource}" rowKey="#{dataAssociation.dataElementName} (#{dataAssociation.dataType})">
                        <f:facet name="header">  
                            Data Mapping 
                        </f:facet>
                        <p:column>
                            <f:facet name="header">
                                #{formBean.query.operationName} (Source)
                            </f:facet>
                            <h:outputText value="#{dataAssociation.dataElementName} (#{dataAssociation.dataType})"></h:outputText> 
                        </p:column>

                        <p:column>
                            <f:facet name="header">
                                #{formBean.target.operationName} (Target)
                            </f:facet>
                            <p:selectOneMenu value="#{formBean.selectedTarget}" effect="fade" >  
                                <f:selectItem itemLabel="Select One" itemValue="" />  
                                <f:selectItems value="#{formBean.initTargetDataElements()}" var="dataElementTarget" itemLabel="#{dataElementTarget.dataElementName} (#{dataElementTarget.dataType})" itemValue="#{dataElementTarget.dataElementName}"/>  
                            </p:selectOneMenu>  
                        </p:column>
                        <f:facet name="footer">
                            <p:spacer height="5" />
                        </f:facet> 
                    </p:dataTable>
                    <br />
                    <p:commandButton value="Submit" onclick="overlayPanelMapping.hide();
                dlg.show();
                coloringWire();" oncomplete="#{formBean.dataAssociations}" icon="ui-icon-check"/>
                    <br />
                </p:overlayPanel> 
                <p:dialog header="Selected Values" modal="true" showEffect="fade" hideEffect="fade" widgetVar="dlg">  
                    <h:panelGrid columns="1" id="display">  
                        <h:outputText value="Value 5: #{formBean.selectedSource.size()} - #{formBean.selectedTarget}"/> 
                    </h:panelGrid>  
                </p:dialog>
            </h:form>
        </div>
        <div>
            <p:dialog modal="true" widgetVar="statusDialog" header="Download JSON Graph" draggable="false" closable="false" resizable="false">
                <p:graphicImage value="/images/ajaxloadingbar.gif" />
            </p:dialog>

            <h:form prependId="false">
                <h:inputHidden id="json-graph" value="#{fileDownloadController.jsonContent}" />
                <p:commandButton id="downloadLink" value="Download" actionListener="#{fileDownloadController.setJsonContentOnFile()}" onclick="getJsonGraph();"></p:commandButton>
                <p:commandButton id="downloadFile" value="Download" ajax="false" actionListener="#{fileDownloadController.exportFile()}" onclick="PrimeFaces.monitorDownload(startDowload, stopDowload);" 
                                 icon="ui-icon-arrowthichk-s" title="Save this file">
                    <p:fileDownload value="#{fileDownloadController.file}"/>
                </p:commandButton>
            </h:form>
        </div>
    </h:body>
</html>

